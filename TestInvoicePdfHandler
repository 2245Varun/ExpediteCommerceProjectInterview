@isTest
private class TestInvoicePdfHandler {
    @isTest
    static void testCreateInvoice() {
        // Create test Order data
        
         Account acc = new Account(Name = 'TestInvoice');
        insert acc;
        
        Contract newContract = new Contract(
            AccountId = acc.Id, 
            StartDate = Date.today(),
            Status = 'Draft', 
            ContractTerm = 12
        );
        insert newContract;
        
         newContract.Status = 'Activated';
        update newContract;
        
        Product2 productItem = new Product2(name = 'Product test');
        insert productItem;
        
        PricebookEntry standardEntryForProduct2 = new PricebookEntry(
            Pricebook2Id = Test.getStandardPricebookId(),
            Product2Id = productItem.Id,
            UnitPrice = 200.00, // Adjust the unit price as needed
            IsActive = true
        );
        insert standardEntryForProduct2;
        
        Pricebook2 standardPricebook = new Pricebook2(
            Name = 'Standard Price Book',
            IsActive = true
        );
        insert standardPricebook;
        
        PricebookEntry entryInStandardBook = new PricebookEntry(
            Pricebook2Id = standardPricebook.Id,
            Product2Id = productItem.Id,
            UnitPrice = 1000.00
        );
        insert entryInStandardBook;
        
        Order testOrder = new Order(
                Name = 'Test Order',
                Status = 'Draft',
                EffectiveDate = Date.today(),
                AccountId = acc.Id,
                ContractId = newContract.Id,
                Pricebook2Id = standardPricebook.Id );
                insert testOrder;
        
        List<OrderItem> testOrderItems = new List<OrderItem>();
            for (Integer i = 0; i < 2; i++) {
                testOrderItems.add(new OrderItem(
                    OrderId = testOrder.Id,
                    Product2Id = productItem.Id,
                    UnitPrice = 1000.00,
                    Quantity = 1,
                    PricebookEntryId = entryInStandardBook.Id
                ));
        }
        insert testOrderItems;
        
        // Update Order status to 'Activated'
        
            testOrder.Status = 'Activated';
        
        update testOrder;
        Test.startTest();
        // Call the method to be tested
        PageReference pdfPage = InvoicePdfHandler.createInvoice(testOrder.Id);
        Test.stopTest();
        
        // Verify the result
        System.assertNotEquals(null, pdfPage, 'PDF Page reference should not be null');
     //   System.assertEquals('InvoicePdfForOrder', pdfPage.getName(), 'PDF Page should be InvoicePdfForOrder');
        System.assertEquals(testOrder.Id, pdfPage.getParameters().get('orderId'), 'PDF Page should have correct orderId parameter');
        
        List<OrderItem> deserializedOrderItems = (List<OrderItem>)JSON.deserialize((String)pdfPage.getParameters().get('orderLineItems'), List<OrderItem>.class);
        System.assertNotEquals(null, deserializedOrderItems, 'Order Line Items should be deserialized');
        System.assertEquals(2, deserializedOrderItems.size(), 'There should be one Order Line Item');
        System.assertEquals(testOrderItems[0].Id, deserializedOrderItems[0].Id, 'Order Line Item should match the test data');
        // Add more assertions as needed
    }
}
